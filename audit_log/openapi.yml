openapi: 3.0.0 
info: 
  description: This API provides audit info 
  version: "1.0.0" 
  title: Audit API 
  contact: 
    email: stevennguyen901@gmail.com
 
paths: 
  /order: 
    get: 
      summary: gets an order data from history 
      operationId: app.get_order
      description: Gets order data from the event store 
      parameters: 
        - name: index 
          in: query 
          description: Gets the order at the index in the event store 
          schema: 
            type: integer 
            example: 100 
      responses: 
        '200': 
          description: Successfully returned a order event 
          content: 
            application/json: 
              schema: 
                type: object 
                items: 
                  $ref: '#/components/schemas/Order' 
        '400': 
          description: Invalid request 
          content: 
            application/json: 
              schema: 
                type: object 
                properties: 
                  message: 
                    type: string 
        '404': 
          description: Not Found 
          content: 
            application/json: 
              schema: 
                type: object 
                properties: 
                  message: 
                    type: string 
 
  /delivery: 
    get: 
      summary: gets delivery data from history 
      operationId: app.get_delivery
      description: Gets delivery data from the event store 
      parameters: 
        - name: index 
          in: query 
          description: Gets the delivery at the index in the event store 
          schema: 
            type: integer 
            example: 100 
      responses: 
        '200': 
          description: Successfully returned delivery event 
          content: 
            application/json: 
              schema: 
                type: object 
                items: 
                  $ref: '#/components/schemas/Delivery' 
        '400': 
          description: Invalid request 
          content: 
            application/json: 
              schema: 
                type: object 
                properties: 
                  message: 
                    type: string 
        '404': 
          description: Not Found 
  /health:
    get:
      summary: Returns 200 if healthy
      description: Returns 200 if healthy
      operationId: app.get_health
      responses:
        "200":  
          description: This service is healthy!
        "400":
          description: This service is unhealthy
 
components: 
  schemas: 
    Order: 
      required: 
      - customer
      - food
      - orderID
      - price
      - traceID
      type: object
      properties:
        customer:
          type: string
          example: Lebron James
        orderID:
          type: number
          example: 1
        food:
          type: string
          example: sushi
        price:
          type: number
          format: money
          example: 43.45
        traceID:
          type: string
          example: 71a042ef-d88c-4c6c-9d93-37df3e243e91

    Delivery:
      required:
      - address
      - distance
      - driver
      - orderNum
      - traceID
      type: object
      properties:
        orderNum:
          type: number
          example: 1
        distance:
          type: number
          example: 54.2
        driver:
          type: string
          example: Joe Joe
        address:
          type: string
          format: 1234 21ave
          example: "1234 21ave"
        traceID:
          type: string
          example: 71a042ef-d88c-4c6c-9d93-37df3e243e91

