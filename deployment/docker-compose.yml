version: '3.8'

services:

  zookeeper:
    image: wurstmeister/zookeeper
    restart: always
    ports:
      - "2181"
    hostname: zookeeper

  kafka:
    image: wurstmeister/kafka
    restart: always
    command: [ start-kafka.sh ]
    ports:
      - "9092:9092"
    hostname: kafka
    environment:
      KAFKA_CREATE_TOPICS: "events:1:1" # topic:partition:replicas
      KAFKA_ADVERTISED_HOST_NAME: kafkalmao.eastus.cloudapp.azure.com # docker-machine ip
      KAFKA_LISTENERS: INSIDE://:29092,OUTSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://kafkalmao.eastus.cloudapp.azure.com:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - "zookeeper"

  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'events'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'user'
                                                              
  receiver:
    image: receiver
    container_name: receiver
    ports: 
      - '8080:8080'
    depends_on:
      - "kafka"
    restart: always
    
  storage:
    image: storage
    container_name: storage
    ports: 
      - '8090:8090'
    depends_on:
      - "kafka"
      - "db"
    restart: always

  processing:
    image: processing
    container_name: processing
    ports:
      - '8100:8100'
    network_mode: host
    depends_on:
      - 'storage'
    volumes:
      - my-db:/var/lib/sqlite
    restart: always

  audit_log:
    image: audit_log
    container_name: audit_log
    ports: 
      - '8110:8110'
    depends_on:
      - "kafka"
    restart: always

volumes:
  my-db:

